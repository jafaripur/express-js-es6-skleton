#!/usr/bin/env node

import app from './../app';
import http from 'http';
import console from 'color-console';
import ApplicationConfig from '../config/application';
const debug = require('debug')('test:server');

const port = normalizePort(ApplicationConfig.port);
app.set('port', port);

const server = http.createServer(app);
const serverListen = server.listen(port);

server.on('error', onError);
server.on('listening', onListening);
console.blue('App started on port : ' + port);

function normalizePort(val) {
    var port = parseInt(val, 10);

    if (isNaN(port)) {
        return val;
    }

    if (port >= 0) {
        return port;
    }

    return false;
}

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;

    switch (error.code) {
        case 'EACCES':
            console.red(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.red(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    debug('Listening on ' + bind);
}
